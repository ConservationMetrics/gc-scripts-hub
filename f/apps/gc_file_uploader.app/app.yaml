summary: GC File Uploader
value:
  css:
    buttoncomponent:
      button:
        class: ''
        style: ''
      container:
        class: ''
        style: ''
    containercomponent:
      container:
        class: ''
        style: ''
    formcomponent:
      button:
        class: ''
        style: ''
      container:
        class: ''
        style: ''
    steppercomponent:
      container:
        class: ''
        style: ''
    textcomponent:
      container:
        class: ''
        style: ''
      text:
        class: ''
        style: ''
  fullscreen: false
  grid:
    - '12':
        fixed: true
        fullHeight: false
        h: 1
        w: 6
        x: 3
        'y': 1
      '3':
        fixed: true
        fullHeight: false
        h: 1
        w: 1
        x: 0
        'y': 0
      id: pageTitle
      data:
        id: pageTitle
        type: textcomponent
        actions: []
        componentInput:
          type: templatev2
          connections: []
          eval: Guardian Connector File Uploader
          fieldType: template
        configuration:
          copyButton:
            type: static
            value: false
          disableNoText:
            type: static
            value: false
          style:
            type: static
            value: Title
          tooltip:
            type: static
            value: ''
        customCss:
          container:
            class: ''
            style: ''
          text:
            class: ''
            style: ''
        horizontalAlignment: center
        verticalAlignment: top
    - '12':
        fixed: false
        fullHeight: false
        h: 1
        w: 6
        x: 3
        'y': 3
      '3':
        fixed: false
        fullHeight: false
        h: 1
        w: 1
        x: 1
        'y': 6
      id: formTitle
      data:
        id: formTitle
        type: textcomponent
        actions: []
        componentInput:
          type: templatev2
          connections: []
          eval: Upload a file to your data warehouse
          fieldType: template
        configuration:
          copyButton:
            type: static
            value: false
          disableNoText:
            type: static
            value: false
          style:
            type: static
            value: Subtitle
          tooltip:
            type: static
            value: ''
        customCss:
          container:
            class: ''
            style: ''
          text:
            class: ''
            style: ''
        horizontalAlignment: center
        verticalAlignment: top
    - '12':
        fixed: true
        fullHeight: false
        h: 10
        w: 8
        x: 2
        'y': 5
      '3':
        fixed: true
        fullHeight: false
        h: 8
        w: 2
        x: 1
        'y': 7
      id: formStepper
      data:
        id: formStepper
        type: steppercomponent
        actions: []
        componentInput:
          type: runnable
          autoRefresh: false
          fields: {}
          fieldType: any
          recomputeOnInputChanged: false
          runnable:
            type: runnableByName
            name: Form stepper validation
            inlineScript:
              content: '!inline form_stepper_validation.inline_script.frontend.js'
              language: frontend
              path: f/apps/gc_file_uploader/Form_stepper_validation
              suggestedRefreshOn:
                - id: submitDatasetName
                  key: result
        configuration: {}
        customCss:
          container:
            class: border-2 border-blue-300 border-dashed
            style: ''
        numberOfSubgrids: 3
        onNext: []
        onPrevious: []
        tabs:
          - Name your dataset
          - Upload your file
          - Apply transformations
  hiddenInlineScripts:
    - type: runnableByPath
      name: 'Locus Map: Import Data'
      autoRefresh: false
      fields:
        attachment_root:
          type: static
          value: /persistent-storage/datalake
          fieldType: string
        db:
          type: static
          fieldType: object
          format: resource-postgresql
        db_table_name:
          type: evalv2
          value: null
          connections:
            - id: result
              componentId: uploadFile
          expr: uploadFile.result.db_table_name
          fieldType: string
        delete_locusmap_export_file:
          type: static
          value: true
          fieldType: boolean
        locusmap_export_path:
          type: evalv2
          connections:
            - id: result
              componentId: uploadFile
          expr: uploadFile.result.file_path
          fieldType: string
      path: f/connectors/locusmap/locusmap
      recomputeIds:
        - bg_2
      recomputeOnInputChanged: false
      runType: script
      schema:
        $schema: 'https://json-schema.org/draft/2020-12/schema'
        type: object
        order:
          - locusmap_export_path
          - db
          - db_table_prefix
          - delete_locusmap_export_file
          - attachment_root
        properties:
          attachment_root:
            type: string
            description: >-
              A path where Locus Map attachments will be stored. Attachment
              files will be stored in the following directory schema: 
              `{attachment_root}/{db_table_name}/attachments/{filename}`
            default: /persistent-storage/datalake
            originalType: string
          db:
            type: object
            description: A database connection for storing tabular data.
            default: null
            format: resource-postgresql
          db_table_name:
            type: string
            description: The name of the database table where the form data will be stored.
            default: null
            originalType: string
            pattern: '^.{1,54}$'
          delete_locusmap_export_file:
            type: boolean
            description: Whether to delete the Locus Map export file after processing.
            default: false
          locusmap_export_path:
            type: string
            description: >-
              The path to the file exported from Locus Map, including the
              filename. This could be a GPX/KML/CSV file, or a ZIP file also
              containing attachments.
            originalType: string
        required:
          - db
          - db_table_name
          - locusmap_export_path
    - type: runnableByName
      name: Set state.uploadSuccess to false
      autoRefresh: true
      fields: {}
      inlineScript:
        content: '!inline set_state.uploadsuccess_to_false.inline_script.frontend.js'
        language: frontend
        path: f/apps/gc_uploader/Set_state.uploadSuccess_to_false
        suggestedRefreshOn:
          - id: state
            key: uploadSuccess
      recomputeIds: []
      recomputeOnInputChanged: true
    - type: runnableByName
      name: Toggle state.uploadSuccess
      autoRefresh: false
      fields: {}
      inlineScript:
        content: '!inline toggle_state.uploadsuccess.inline_script.frontend.js'
        language: frontend
        path: f/apps/gc_uploader/Toggle_state.uploadSuccess
        suggestedRefreshOn:
          - id: state
            key: uploadSuccess
          - id: state
            key: uploadProcessing
          - id: selectFile
            key: result
          - id: uploadFile
            key: result
      recomputeIds: []
      recomputeOnInputChanged: true
    - type: runnableByName
      name: Toggle state.uploadButtonEnabled
      autoRefresh: false
      fields: {}
      inlineScript:
        content: '!inline toggle_state.uploadbuttonenabled.inline_script.frontend.js'
        language: frontend
        path: f/apps/gc_uploader/Toggle_state.uploadButtonEnabled
        suggestedRefreshOn:
          - id: selectFile
            key: result
      recomputeIds: []
      recomputeOnInputChanged: true
    - type: runnableByName
      name: Set state.uploadProcessing to true;
      autoRefresh: false
      fields: {}
      inlineScript:
        content: '!inline set_state.uploadprocessing_to_true;.inline_script.frontend.js'
        language: frontend
        path: f/apps/gc_uploader/Set_state.uploadProcessing_to_true;
        suggestedRefreshOn:
          - id: state
            key: uploadProcessing
      recomputeIds: []
      recomputeOnInputChanged: true
  hideLegacyTopBar: true
  mobileViewOnSmallerScreens: false
  norefreshbar: false
  subgrids:
    formStepper-0:
      - '12':
          fixed: true
          fullHeight: false
          h: 4
          w: 12
          x: 0
          'y': 0
        '3':
          fixed: true
          fullHeight: false
          h: 8
          w: 3
          x: 0
          'y': 1
        id: enterDatasetName
        data:
          id: enterDatasetName
          type: schemaformcomponent
          actions: []
          componentInput:
            type: static
            value:
              order:
                - Dataset name
              properties:
                Dataset name:
                  type: string
                  description: >-
                    Enter the name you wish to give your dataset. This will be
                    used for filenames and database table names.
                  customErrorMessage: >-
                    Must start with a letter or underscore, contain only
                    letters, numbers, or underscores, and be no longer than 62
                    characters.
                  default: ''
                  disableVariablePicker: true
                  nullable: false
                  pattern: '^[a-zA-Z_][a-zA-Z0-9_]{0,61}$'
                  placeholder: ''
              required:
                - Dataset name
            connections: []
            expr: ''
            fieldType: schema
          configuration:
            defaultValues:
              type: static
              value: {}
              connections: []
              expr: '{}'
            displayType:
              type: static
              value: false
            dynamicEnums:
              type: static
              value: {}
            largeGap:
              type: static
              value: false
          customCss:
            description:
              class: ''
              style: ''
            container:
              class: ''
              style: ''
            label:
              class: ''
              style: ''
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 10
          x: 0
          'y': 4
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 0
          'y': 0
        id: enterDatasetNameResultMessage
        data:
          id: enterDatasetNameResultMessage
          type: textcomponent
          actions: []
          componentInput:
            type: runnable
            autoRefresh: true
            connections:
              - id: result
                componentId: submitDatasetName
            eval: ''
            expr: submitDatasetName.result
            fields: {}
            fieldType: template
            hideRefreshButton: true
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: Eval of enterDatasetNameResultMessage
              inlineScript:
                content: >-
                  !inline
                  eval_of_enterdatasetnameresultmessage.inline_script.frontend.js
                language: frontend
                path: f/apps/gc_file_uploader/Eval_of_enterDatasetNameResultMessage
                refreshOn:
                  - id: submitDatasetName
                    key: result
                suggestedRefreshOn: []
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: true
            style:
              type: static
              value: Label
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: ''
              style: ''
          horizontalAlignment: center
          verticalAlignment: top
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 2
          x: 10
          'y': 4
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 10
          'y': 5
        id: submitDatasetName
        data:
          id: submitDatasetName
          type: buttoncomponent
          actions: []
          componentInput:
            type: runnable
            autoRefresh: false
            fields:
              db:
                type: static
                value: '$res:u/rudo/ingenuous_postgresql'
                fieldType: object
                format: resource-postgresql
              table_name:
                type: evalv2
                value: haha
                connections:
                  - id: values
                    componentId: enterDatasetName
                expr: 'enterDatasetName.values["Dataset name"]'
                fieldType: string
            fieldType: any
            recomputeOnInputChanged: false
            runnable:
              type: runnableByName
              name: Check if database table exists
              inlineScript:
                content: '!inline check_if_database_table_exists.inline_script.py'
                lock: '!inline check_if_database_table_exists.inline_script.lock'
                language: python3
                path: f/apps/gc_file_uploader/Check_if_database_table_exists
                schema:
                  $schema: 'https://json-schema.org/draft/2020-12/schema'
                  type: object
                  properties:
                    db:
                      type: object
                      description: ''
                      default: null
                      format: resource-postgresql
                    table_name:
                      type: string
                      description: ''
                      default: null
                      originalType: string
                  required:
                    - db
                    - table_name
          configuration:
            afterIcon:
              type: static
              value: ''
            beforeIcon:
              type: static
              value: ''
            color:
              type: static
              value: dark
            confirmationModal:
              type: oneOf
              configuration:
                confirmationModal:
                  description:
                    type: static
                    value: Are you sure?
                  confirmationText:
                    type: static
                    value: Confirm
                  title:
                    type: static
                    value: Title
                none: {}
              selected: none
            disabled:
              type: evalv2
              value: true
              connections:
                - id: valid
                  componentId: enterDatasetName
              expr: '!enterDatasetName.valid'
            fillContainer:
              type: static
              value: false
            label:
              type: static
              value: Submit
            onError:
              type: oneOf
              configuration:
                close:
                  id:
                    type: static
                    value: ''
                errorOverlay: {}
                gotoUrl:
                  newTab:
                    type: static
                    value: true
                  url:
                    type: static
                    value: ''
                open:
                  id:
                    type: static
                    value: ''
                sendErrorToast:
                  appendError:
                    type: static
                    value: true
                  message:
                    type: static
                    value: An error occured
                setTab:
                  setTab:
                    type: static
                    value: []
              selected: errorOverlay
            onSuccess:
              type: oneOf
              configuration:
                clearFiles:
                  id:
                    type: static
                    value: ''
                close:
                  id:
                    type: static
                    value: ''
                closeModal:
                  modalId:
                    type: static
                    value: ''
                gotoUrl:
                  newTab:
                    type: static
                    value: true
                  url:
                    type: static
                    value: ''
                none: {}
                open:
                  id:
                    type: static
                    value: ''
                openModal:
                  modalId:
                    type: static
                    value: ''
                sendToast:
                  message:
                    type: static
                    value: ''
                setTab:
                  setTab:
                    type: static
                    value: []
              selected: none
            size:
              type: static
              value: xs
            triggerOnAppLoad:
              type: static
              value: false
          customCss:
            button:
              class: ''
              style: ''
            container:
              class: ''
              style: ''
          horizontalAlignment: center
          recomputeIds: []
          verticalAlignment: center
    formStepper-1:
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 10
          x: 1
          'y': 0
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 3
          'y': 0
        id: formHint
        data:
          id: formHint
          type: textcomponent
          actions: []
          componentInput:
            type: templatev2
            connections: []
            eval: 'Accepted formats: CSV, GeoJSON, GPX, JSON, KML, KMZ, XLS, XLSX'
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: false
            style:
              type: static
              value: Body
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: ''
              style: 'font-size: 0.6em!important;'
          horizontalAlignment: center
          verticalAlignment: center
      - '12':
          fixed: false
          fullHeight: false
          h: 4
          w: 10
          x: 1
          'y': 1
        '3':
          fixed: false
          fullHeight: false
          h: 4
          w: 3
          x: 1
          'y': 1
        id: selectFile
        data:
          id: selectFile
          type: fileinputcomponent
          actions: []
          configuration:
            acceptedFileTypes:
              type: static
              value:
                - text/csv
                - application/gpx+xml
                - application/vnd.google-earth.kml+xml
                - application/vnd.google-earth.kmz
                - >-
                  application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
                - application/vnd.ms-excel
                - application/json
              connections:
                - id: result
                  componentId: selectFile
              expr: selectFile.result
            allowMultiple:
              type: static
              value: false
            disabled:
              type: static
              value: false
              connections: []
              expr: 'false'
            includeMimeType:
              type: static
              value: false
            submittedFileText:
              type: static
              value: Selected file
              connections: []
              expr: '"Selected file"'
            text:
              type: static
              value: Drag and drop files or click to select them
              connections: []
              expr: '"Drag and drop files or click to select them"'
          customCss:
            container:
              class: ''
              style: ''
          onFileChange:
            - bg_3
            - bg_1
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 6
          x: 3
          'y': 6
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 0
          'y': 6
        id: uploadFileResultMessage
        data:
          id: uploadFileResultMessage
          type: textcomponent
          actions: []
          componentInput:
            type: runnable
            autoRefresh: true
            connections: []
            eval: ''
            expr: ''
            fields: {}
            fieldType: template
            hideRefreshButton: true
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: Update result message
              inlineScript:
                content: '!inline update_result_message.inline_script.frontend.js'
                language: frontend
                path: f/apps/gc_file_uploader/Update_result_message
                refreshOn:
                  - id: state
                    key: uploadSuccess
                  - id: state
                    key: uploadProcessing
                suggestedRefreshOn: []
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: true
            style:
              type: static
              value: Body
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: ''
              style: ''
          horizontalAlignment: center
          verticalAlignment: top
    formStepper-2: []
  theme:
    type: path
    path: f/app_themes/theme_0
  unusedInlineScripts: []
policy:
  allowed_s3_keys: []
  execution_mode: publisher
  s3_inputs: []
  triggerables_v2:
    'bg_0:script/f/connectors/locusmap/locusmap':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs:
        attachment_root: /persistent-storage/datalake
        delete_locusmap_export_file: true
    'bg_1:rawscript/75680a5e96c31082b2eac6745fda4454fa917497f23e5150a445949265d92dd9':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'bg_2:rawscript/a99b468b7d6ddf671b98f7f1ea07bbd2aa4d482867330cbc148607741e70f012':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'bg_3:rawscript/a6924af5d1db560649ae80f607042a966547ec52c890170adb4ed6028c61e85a':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'bg_4:rawscript/12150030335dc7872bb196b084257012f06f489e64aa911bd85a0cf7fae87fdf':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'enterDatasetNameResultMessage:rawscript/cf56af06c2c3fb77df89868d94124e0f410e0050cd2ed397f28d4992f40ba568':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'formStepper:rawscript/2e9f4f13c8ab116f555295bc6eb2f0e8cc74608cfb970fe71133ff544475a278':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'submitDatasetName:rawscript/57668f9f668d96131044c91870599b3444782b9e51baa0298236b5d38845a44d':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs:
        db: '$res:u/rudo/ingenuous_postgresql'
    'uploadFileResultMessage:rawscript/72c57efb22b5201ca42e05750e728495cced21917f6f05b98dee8cabd63096a0':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
