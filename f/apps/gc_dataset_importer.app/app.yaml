summary: GC Dataset Importer
value:
  css:
    buttoncomponent:
      button:
        class: ''
        style: ''
      container:
        class: ''
        style: ''
    checkboxcomponent:
      container:
        class: ''
        style: ''
      text:
        class: ''
        style: ''
    containercomponent:
      container:
        class: ''
        style: ''
    fileinputcomponent:
      container:
        class: ''
        style: ''
    formcomponent:
      button:
        class: ''
        style: ''
      container:
        class: ''
        style: ''
    steppercomponent:
      container:
        class: ''
        style: ''
    textcomponent:
      container:
        class: ''
        style: ''
      text:
        class: ''
        style: ''
  fullscreen: false
  grid:
    - '12':
        fixed: true
        fullHeight: false
        h: 1
        w: 8
        x: 2
        'y': 1
      '3':
        fixed: true
        fullHeight: false
        h: 1
        w: 1
        x: 0
        'y': 0
      id: pageTitle
      data:
        id: pageTitle
        type: textcomponent
        actions: []
        componentInput:
          type: templatev2
          connections: []
          eval: Guardian Connector Dataset Importer
          fieldType: template
        configuration:
          copyButton:
            type: static
            value: false
          disableNoText:
            type: static
            value: false
          style:
            type: static
            value: Title
          tooltip:
            type: static
            value: ''
        customCss:
          container:
            class: ''
            style: ''
          text:
            class: ''
            style: ''
        horizontalAlignment: center
        verticalAlignment: top
    - '12':
        fixed: false
        fullHeight: false
        h: 1
        w: 8
        x: 2
        'y': 3
      '3':
        fixed: false
        fullHeight: false
        h: 1
        w: 1
        x: 1
        'y': 6
      id: formTitle
      data:
        id: formTitle
        type: textcomponent
        actions: []
        componentInput:
          type: templatev2
          connections: []
          eval: "\U0001F4E4 Upload a file to your data warehouse"
          fieldType: template
        configuration:
          copyButton:
            type: static
            value: false
          disableNoText:
            type: static
            value: false
          style:
            type: static
            value: Subtitle
          tooltip:
            type: static
            value: ''
        customCss:
          container:
            class: ''
            style: ''
          text:
            class: ''
            style: ''
        horizontalAlignment: center
        verticalAlignment: top
    - '12':
        fixed: true
        fullHeight: false
        h: 11
        w: 8
        x: 2
        'y': 5
      '3':
        fixed: true
        fullHeight: false
        h: 8
        w: 2
        x: 1
        'y': 7
      id: formStepper
      data:
        id: formStepper
        type: steppercomponent
        actions: []
        componentInput:
          type: runnable
          autoRefresh: false
          fields: {}
          fieldType: any
          recomputeOnInputChanged: false
          runnable:
            type: runnableByName
            name: Form stepper validation
            inlineScript:
              content: '!inline form_stepper_validation.inline_script.frontend.js'
              language: frontend
              path: f/apps/gc_file_uploader/Form_stepper_validation
              suggestedRefreshOn:
                - id: state
                  key: datasetAvailable
                - id: formStepper
                  key: currentStepIndex
                - id: formStepper
                  key: lastAction
                - id: state
                  key: uploadSuccess
        configuration: {}
        customCss:
          container:
            class: border-2 border-blue-300 border-dashed
            style: ''
        numberOfSubgrids: 4
        onNext: []
        onPrevious: []
        tabs:
          - Name your dataset
          - Upload your file
          - Choose data source
          - Finalize
  hiddenInlineScripts:
    - type: runnableByName
      name: '[1] Dataset is available'
      autoRefresh: false
      fields: {}
      inlineScript:
        content: '!inline [1]_dataset_is_available.inline_script.frontend.js'
        language: frontend
        path: 'f/apps/gc_file_uploader/[1]_Dataset_is_available'
        refreshOn: []
        suggestedRefreshOn:
          - id: submitDatasetName
            key: result
          - id: state
            key: datasetAvailable
      recomputeIds: []
      recomputeOnInputChanged: true
    - type: runnableByName
      name: '[2] File has been selected'
      autoRefresh: false
      fields: {}
      inlineScript:
        content: '!inline [2]_file_has_been_selected.inline_script.frontend.js'
        language: frontend
        path: 'f/apps/gc_file_uploader/[2]_File_has_been_selected'
        suggestedRefreshOn:
          - id: selectFile
            key: result
      recomputeIds: []
      recomputeOnInputChanged: true
    - type: runnableByName
      name: '[2] Toggle state.uploadSuccess'
      autoRefresh: false
      fields: {}
      inlineScript:
        content: '!inline [2]_toggle_state.uploadsuccess.inline_script.frontend.js'
        language: frontend
        path: 'f/apps/gc_file_uploader/[2]_Toggle_state.uploadSuccess'
        refreshOn:
          - id: uploadFile
            key: result
        suggestedRefreshOn:
          - id: selectFile
            key: result
      recomputeIds: []
      recomputeOnInputChanged: true
    - type: runnableByName
      name: Background Runnable 3
      fields: {}
      hidden: true
      recomputeIds: []
  hideLegacyTopBar: true
  mobileViewOnSmallerScreens: false
  norefreshbar: false
  subgrids:
    formStepper-0:
      - '12':
          fixed: true
          fullHeight: false
          h: 4
          w: 12
          x: 0
          'y': 1
        '3':
          fixed: true
          fullHeight: false
          h: 8
          w: 3
          x: 0
          'y': 1
        id: enterDatasetName
        data:
          id: enterDatasetName
          type: schemaformcomponent
          actions: []
          componentInput:
            type: static
            value:
              order:
                - Dataset name
              properties:
                Dataset name:
                  type: string
                  description: >-
                    Enter the name you wish to give your dataset. This will be
                    used for filenames and database table names.
                  customErrorMessage: >-
                    Must start with a letter or underscore, contain only
                    letters, numbers, or underscores, and be no longer than 62
                    characters.
                  default: ''
                  disableVariablePicker: true
                  nullable: false
                  pattern: '^[a-zA-Z_][a-zA-Z0-9_]{0,61}$'
                  placeholder: ''
              required:
                - Dataset name
            connections: []
            expr: ''
            fieldType: schema
          configuration:
            defaultValues:
              type: static
              value: {}
              connections: []
              expr: '{}'
            displayType:
              type: static
              value: false
            dynamicEnums:
              type: static
              value: {}
            largeGap:
              type: static
              value: false
          customCss:
            description:
              class: ''
              style: ''
            container:
              class: ''
              style: ''
            label:
              class: ''
              style: ''
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 2
          x: 5
          'y': 5
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 10
          'y': 5
        id: submitDatasetName
        data:
          id: submitDatasetName
          type: buttoncomponent
          actions: []
          componentInput:
            type: runnable
            autoRefresh: false
            fields:
              db:
                type: static
                value: '$res:u/rudo/ingenuous_postgresql'
                fieldType: object
                format: resource-postgresql
              table_name:
                type: evalv2
                value: haha
                connections:
                  - id: values
                    componentId: enterDatasetName
                expr: 'enterDatasetName.values["Dataset name"]'
                fieldType: string
            fieldType: any
            recomputeOnInputChanged: false
            runnable:
              type: runnableByName
              name: Check if database table exists
              inlineScript:
                content: '!inline check_if_database_table_exists.inline_script.py'
                lock: '!inline check_if_database_table_exists.inline_script.lock'
                language: python3
                path: f/apps/gc_file_uploader/Check_if_database_table_exists
                schema:
                  $schema: 'https://json-schema.org/draft/2020-12/schema'
                  type: object
                  properties:
                    db:
                      type: object
                      description: ''
                      default: null
                      format: resource-postgresql
                    table_name:
                      type: string
                      description: ''
                      default: null
                      originalType: string
                  required:
                    - db
                    - table_name
          configuration:
            afterIcon:
              type: static
              value: ''
            beforeIcon:
              type: static
              value: ''
            color:
              type: static
              value: dark
            confirmationModal:
              type: oneOf
              configuration:
                confirmationModal:
                  description:
                    type: static
                    value: Are you sure?
                  confirmationText:
                    type: static
                    value: Confirm
                  title:
                    type: static
                    value: Title
                none: {}
              selected: none
            disabled:
              type: evalv2
              value: true
              connections:
                - id: valid
                  componentId: enterDatasetName
              expr: '!enterDatasetName.valid'
            fillContainer:
              type: static
              value: false
            label:
              type: static
              value: Check Availability
            onError:
              type: oneOf
              configuration:
                close:
                  id:
                    type: static
                    value: ''
                errorOverlay: {}
                gotoUrl:
                  newTab:
                    type: static
                    value: true
                  url:
                    type: static
                    value: ''
                open:
                  id:
                    type: static
                    value: ''
                sendErrorToast:
                  appendError:
                    type: static
                    value: true
                  message:
                    type: static
                    value: An error occured
                setTab:
                  setTab:
                    type: static
                    value: []
              selected: errorOverlay
            onSuccess:
              type: oneOf
              configuration:
                clearFiles:
                  id:
                    type: static
                    value: ''
                close:
                  id:
                    type: static
                    value: ''
                closeModal:
                  modalId:
                    type: static
                    value: ''
                gotoUrl:
                  newTab:
                    type: static
                    value: true
                  url:
                    type: static
                    value: ''
                none: {}
                open:
                  id:
                    type: static
                    value: ''
                openModal:
                  modalId:
                    type: static
                    value: ''
                sendToast:
                  message:
                    type: static
                    value: ''
                setTab:
                  setTab:
                    type: static
                    value: []
              selected: none
            size:
              type: static
              value: xs
            triggerOnAppLoad:
              type: static
              value: false
          customCss:
            button:
              class: ''
              style: ''
            container:
              class: ''
              style: ''
          horizontalAlignment: center
          recomputeIds:
            - bg_0
          verticalAlignment: center
      - '12':
          fixed: true
          fullHeight: false
          h: 2
          w: 12
          x: 0
          'y': 6
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 0
          'y': 0
        id: enterDatasetNameResultMessage
        data:
          id: enterDatasetNameResultMessage
          type: textcomponent
          actions: []
          componentInput:
            type: runnable
            autoRefresh: true
            connections:
              - id: result
                componentId: submitDatasetName
            eval: ''
            expr: submitDatasetName.result
            fields: {}
            fieldType: template
            hideRefreshButton: true
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: Eval of enterDatasetNameResultMessage
              inlineScript:
                content: >-
                  !inline
                  eval_of_enterdatasetnameresultmessage.inline_script.frontend.js
                language: frontend
                path: f/apps/gc_file_uploader/Eval_of_enterDatasetNameResultMessage
                refreshOn:
                  - id: state
                    key: datasetAvailable
                suggestedRefreshOn: []
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: true
            style:
              type: static
              value: Label
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: ''
              style: ''
          horizontalAlignment: center
          verticalAlignment: center
    formStepper-1:
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 10
          x: 1
          'y': 0
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 3
          'y': 0
        id: acceptedFormatsLabel
        data:
          id: acceptedFormatsLabel
          type: textcomponent
          actions: []
          componentInput:
            type: templatev2
            connections: []
            eval: 'Accepted formats: CSV, GeoJSON, GPX, JSON, KML, KMZ, XLS, XLSX'
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: false
            style:
              type: static
              value: Body
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: ''
              style: 'font-size: 0.7em;'
          horizontalAlignment: center
          verticalAlignment: center
      - '12':
          fixed: true
          fullHeight: false
          h: 4
          w: 10
          x: 1
          'y': 1
        '3':
          fixed: true
          fullHeight: false
          h: 4
          w: 3
          x: 1
          'y': 1
        id: selectFile
        data:
          id: selectFile
          type: fileinputcomponent
          actions: []
          configuration:
            acceptedFileTypes:
              type: static
              value:
                - text/csv
                - application/gpx+xml
                - application/vnd.google-earth.kml+xml
                - application/vnd.google-earth.kmz
                - >-
                  application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
                - application/vnd.ms-excel
                - application/json
              connections:
                - id: result
                  componentId: selectFile
              expr: selectFile.result
            allowMultiple:
              type: static
              value: false
            disabled:
              type: static
              value: false
              connections: []
              expr: 'false'
            includeMimeType:
              type: static
              value: false
            submittedFileText:
              type: static
              value: Selected file
              connections: []
              expr: '"Selected file"'
            text:
              type: static
              value: Drag and drop files or click to select them
              connections: []
              expr: '"Drag and drop files or click to select them"'
          customCss:
            container:
              class: ''
              style: ''
          onFileChange:
            - bg_1
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 2
          x: 5
          'y': 5
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 0
          'y': 0
        id: uploadFile
        data:
          id: uploadFile
          type: buttoncomponent
          actions: []
          componentInput:
            type: runnable
            autoRefresh: false
            fields:
              uploaded_file:
                type: evalv2
                value: null
                connections:
                  - id: result
                    componentId: selectFile
                expr: selectFile.result
                fieldType: object
            fieldType: any
            recomputeOnInputChanged: false
            runnable:
              type: runnableByName
              name: Upload and convert file
              inlineScript:
                content: '!inline upload_and_convert_file.inline_script.py'
                lock: '!inline upload_and_convert_file.inline_script.lock'
                language: python3
                path: f/apps/gc_file_uploader/Upload_and_convert_file
                schema:
                  $schema: 'https://json-schema.org/draft/2020-12/schema'
                  type: object
                  properties:
                    uploaded_file:
                      type: object
                      description: ''
                      default: null
                  required:
                    - uploaded_file
            transformer:
              content: |-
                state.data = result;
                state.uploadSuccess = true;
              language: frontend
              path: f/apps/gc_file_uploader/Transformer
              suggestedRefreshOn: []
          configuration:
            afterIcon:
              type: static
              value: ''
            beforeIcon:
              type: static
              value: ''
            color:
              type: static
              value: dark
            confirmationModal:
              type: oneOf
              configuration:
                confirmationModal:
                  description:
                    type: static
                    value: Are you sure?
                  confirmationText:
                    type: static
                    value: Confirm
                  title:
                    type: static
                    value: Title
                none: {}
              selected: none
            disabled:
              type: evalv2
              value: false
              connections:
                - id: uploadButtonEnabled
                  componentId: state
              expr: '!state.uploadButtonEnabled === true'
            fillContainer:
              type: static
              value: false
            label:
              type: static
              value: Upload File
            onError:
              type: oneOf
              configuration:
                close:
                  id:
                    type: static
                    value: ''
                errorOverlay: {}
                gotoUrl:
                  newTab:
                    type: static
                    value: true
                  url:
                    type: static
                    value: ''
                open:
                  id:
                    type: static
                    value: ''
                sendErrorToast:
                  appendError:
                    type: static
                    value: true
                  message:
                    type: static
                    value: An error occurred. Please try again.
                setTab:
                  setTab:
                    type: static
                    value: []
              selected: sendErrorToast
            onSuccess:
              type: oneOf
              configuration:
                clearFiles:
                  id:
                    type: static
                    value: ''
                close:
                  id:
                    type: static
                    value: ''
                closeModal:
                  modalId:
                    type: static
                    value: ''
                gotoUrl:
                  newTab:
                    type: static
                    value: true
                  url:
                    type: static
                    value: ''
                none: {}
                open:
                  id:
                    type: static
                    value: ''
                openModal:
                  modalId:
                    type: static
                    value: ''
                sendToast:
                  message:
                    type: static
                    value: File successfully uploaded!
                setTab:
                  setTab:
                    type: static
                    value: []
              selected: sendToast
            size:
              type: static
              value: xs
            triggerOnAppLoad:
              type: static
              value: false
          customCss:
            button:
              class: ''
              style: ''
            container:
              class: ''
              style: ''
          horizontalAlignment: center
          recomputeIds: []
          verticalAlignment: center
      - '12':
          fixed: true
          fullHeight: false
          h: 2
          w: 10
          x: 1
          'y': 6
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 0
          'y': 6
        id: uploadFileResultMessage
        data:
          id: uploadFileResultMessage
          type: textcomponent
          actions: []
          componentInput:
            type: runnable
            autoRefresh: true
            connections: []
            eval: ''
            expr: ''
            fields: {}
            fieldType: template
            hideRefreshButton: true
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: Update result message
              inlineScript:
                content: '!inline update_result_message.inline_script.frontend.js'
                language: frontend
                path: f/apps/gc_file_uploader/Update_result_message
                refreshOn:
                  - id: state
                    key: uploadSuccess
                  - id: state
                    key: uploadProcessing
                suggestedRefreshOn: []
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: true
            style:
              type: static
              value: Label
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: ''
              style: ''
          horizontalAlignment: center
          verticalAlignment: center
    formStepper-2:
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 12
          x: 0
          'y': 2
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 2
          'y': 1
        id: dataSourceToggle
        data:
          id: dataSourceToggle
          type: checkboxcomponent
          actions: []
          configuration:
            defaultValue:
              type: static
            disabled:
              type: static
              value: false
            label:
              type: static
              value: Is this dataset from a known source or tool?
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: font-bold
              style: ''
          horizontalAlignment: center
          onToggle: []
          recomputeIds: []
          verticalAlignment: center
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 12
          x: 0
          'y': 3
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 1
          'y': 0
        id: dataSourceHint
        data:
          id: dataSourceHint
          type: textcomponent
          actions: []
          componentInput:
            type: templatev2
            connections: []
            eval: |
              (We use this to apply special formatting logic.)
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: false
            style:
              type: static
              value: Body
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: |-
                italic 
                text-sm
              style: ''
          horizontalAlignment: center
          verticalAlignment: top
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 6
          x: 3
          'y': 4
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 2
          x: 0
          'y': 1
        id: dataSources
        data:
          id: dataSources
          type: selectcomponent
          actions: []
          configuration:
            create:
              type: static
              value: false
            defaultValue:
              type: static
            disabled:
              type: evalv2
              value: false
              connections:
                - id: result
                  componentId: dataSourceToggle
              expr: '!dataSourceToggle.result'
            fullWidth:
              type: static
              value: true
            items:
              type: static
              value:
                - value: comapeo
                  label: CoMapeo
                - value: kobotoolbox
                  label: KoboToolbox
                - value: locus_map
                  label: Locus Map
                - value: mapeo
                  label: Mapeo
                - value: odk
                  label: ODK
            nativeHtmlSelect:
              type: static
              value: false
            placeholder:
              type: static
              value: Select an item
            preselectFirst:
              type: static
              value: false
          customCss:
            input:
              class: ''
              style: ''
              tooltip: >-
                https://github.com/rob-balfre/svelte-select/blob/master/docs/theming_variables.md
          onSelect: []
          recomputeIds: []
          verticalAlignment: center
    formStepper-3:
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 12
          x: 0
          'y': 0
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 0
          'y': 0
        id: finalizeTitle
        data:
          id: finalizeTitle
          type: textcomponent
          actions: []
          componentInput:
            type: templatev2
            connections: []
            eval: "\U0001F4C4 Review summary"
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: false
            style:
              type: static
              value: Body
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: font-bold
              style: ''
          horizontalAlignment: center
          verticalAlignment: top
      - '12':
          fixed: false
          fullHeight: false
          h: 1
          w: 3
          x: 0
          'y': 1
        '3':
          fixed: false
          fullHeight: false
          h: 1
          w: 1
          x: 1
          'y': 0
        id: datasetNameLabel
        data:
          id: datasetNameLabel
          type: textcomponent
          actions: []
          componentInput:
            type: templatev2
            connections: []
            eval: 'Dataset name:'
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: false
            style:
              type: static
              value: Body
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: font-bold
              style: ''
          horizontalAlignment: left
          verticalAlignment: top
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 9
          x: 3
          'y': 1
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 2
          'y': 0
        id: datasetName
        data:
          id: datasetName
          type: textcomponent
          actions: []
          componentInput:
            type: evalv2
            connections:
              - id: values
                componentId: enterDatasetName
            eval: '${selectFile.result[0].name}'
            expr: 'enterDatasetName.values["Dataset name"]'
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: false
            style:
              type: static
              value: Body
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: 'bg-gray-100 dark:bg-gray-800'
              style: ''
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          verticalAlignment: top
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 3
          x: 0
          'y': 2
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 0
          'y': 1
        id: fileUploadedLabel
        data:
          id: fileUploadedLabel
          type: textcomponent
          actions: []
          componentInput:
            type: templatev2
            connections: []
            eval: 'File uploaded:'
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: false
            style:
              type: static
              value: Body
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: font-bold
              style: ''
          horizontalAlignment: left
          verticalAlignment: top
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 9
          x: 3
          'y': 2
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 1
          'y': 1
        id: fileUploaded
        data:
          id: fileUploaded
          type: textcomponent
          actions: []
          componentInput:
            type: templatev2
            connections:
              - id: result
                componentId: selectFile
            eval: '${selectFile.result[0].name}'
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: false
            style:
              type: static
              value: Body
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: 'bg-gray-100 dark:bg-gray-800'
              style: ''
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          verticalAlignment: top
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 3
          x: 0
          'y': 3
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 2
          'y': 1
        id: dataSourceLabel
        data:
          id: dataSourceLabel
          type: textcomponent
          actions: []
          componentInput:
            type: templatev2
            connections: []
            eval: 'Data source:'
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: false
            style:
              type: static
              value: Body
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: font-bold
              style: ''
          horizontalAlignment: left
          verticalAlignment: top
      - '12':
          fixed: true
          fullHeight: false
          h: 1
          w: 9
          x: 3
          'y': 3
        '3':
          fixed: true
          fullHeight: false
          h: 1
          w: 1
          x: 0
          'y': 2
        id: dataSource
        data:
          id: dataSource
          type: textcomponent
          actions: []
          componentInput:
            type: runnable
            autoRefresh: false
            connections:
              - id: result
                componentId: dataSources
            eval: 'Hello ${ctx.username}'
            expr: dataSources.result
            fields: {}
            fieldType: template
            hideRefreshButton: true
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: eval of Data Source
              inlineScript:
                content: '!inline eval_of_data_source.inline_script.frontend.js'
                language: frontend
                path: f/apps/gc_file_uploader/eval_of_Data_Source
                refreshOn:
                  - id: dataSources
                    key: result
                  - id: dataSourceToggle
                    key: result
                suggestedRefreshOn: []
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: false
            style:
              type: static
              value: Body
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: 'bg-gray-100 dark:bg-gray-800'
              style: ''
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          verticalAlignment: top
      - '12':
          fixed: false
          fullHeight: false
          h: 1
          w: 12
          x: 0
          'y': 4
        '3':
          fixed: false
          fullHeight: false
          h: 1
          w: 1
          x: 2
          'y': 2
        id: saveLabel
        data:
          id: saveLabel
          type: textcomponent
          actions: []
          componentInput:
            type: templatev2
            connections: []
            eval: ✍️ Ready to write this dataset to your warehouse?
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: false
            style:
              type: static
              value: Body
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: |-
                italic 
                text-sm
              style: ''
          horizontalAlignment: center
          verticalAlignment: center
      - '12':
          fixed: false
          fullHeight: false
          h: 1
          w: 2
          x: 5
          'y': 5
        '3':
          fixed: false
          fullHeight: false
          h: 1
          w: 1
          x: 1
          'y': 2
        id: saveButton
        data:
          id: saveButton
          type: buttoncomponent
          actions: []
          componentInput:
            type: runnable
            fields: {}
            fieldType: any
          configuration:
            afterIcon:
              type: static
              value: ''
            beforeIcon:
              type: static
              value: ''
            color:
              type: static
              value: dark
            confirmationModal:
              type: oneOf
              configuration:
                confirmationModal:
                  description:
                    type: static
                    value: Are you sure?
                  confirmationText:
                    type: static
                    value: Confirm
                  title:
                    type: static
                    value: Title
                none: {}
              selected: none
            disabled:
              type: static
              value: false
            fillContainer:
              type: static
              value: false
            label:
              type: static
              value: Save & Finish
            onError:
              type: oneOf
              configuration:
                close:
                  id:
                    type: static
                    value: ''
                errorOverlay: {}
                gotoUrl:
                  newTab:
                    type: static
                    value: true
                  url:
                    type: static
                    value: ''
                open:
                  id:
                    type: static
                    value: ''
                sendErrorToast:
                  appendError:
                    type: static
                    value: true
                  message:
                    type: static
                    value: An error occured
                setTab:
                  setTab:
                    type: static
                    value: []
              selected: errorOverlay
            onSuccess:
              type: oneOf
              configuration:
                clearFiles:
                  id:
                    type: static
                    value: ''
                close:
                  id:
                    type: static
                    value: ''
                closeModal:
                  modalId:
                    type: static
                    value: ''
                gotoUrl:
                  newTab:
                    type: static
                    value: true
                  url:
                    type: static
                    value: ''
                none: {}
                open:
                  id:
                    type: static
                    value: ''
                openModal:
                  modalId:
                    type: static
                    value: ''
                sendToast:
                  message:
                    type: static
                    value: ''
                setTab:
                  setTab:
                    type: static
                    value: []
              selected: none
            size:
              type: static
              value: xs
            triggerOnAppLoad:
              type: static
              value: false
          customCss:
            button:
              class: ''
              style: ''
            container:
              class: ''
              style: ''
          horizontalAlignment: center
          recomputeIds: []
          verticalAlignment: center
      - '12':
          fixed: false
          fullHeight: false
          h: 2
          w: 12
          x: 0
          'y': 6
        '3':
          fixed: false
          fullHeight: false
          h: 1
          w: 1
          x: 0
          'y': 3
        id: saveResult
        data:
          id: saveResult
          type: textcomponent
          actions: []
          componentInput:
            type: templatev2
            connections: []
            eval: ''
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: true
            style:
              type: static
              value: Body
            tooltip:
              type: static
              value: ''
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: ''
              style: ''
          horizontalAlignment: center
          verticalAlignment: center
  theme:
    type: inlined
    css: ''
  unusedInlineScripts: []
policy:
  allowed_s3_keys: []
  execution_mode: publisher
  s3_inputs: []
  triggerables_v2:
    'bg_0:rawscript/2fdb0026720b703ec365c0897de34009bb5f6904789849bb71d89b3947f428a4':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'bg_1:rawscript/aabe938468289958a90ebe7e964e513568364b412f31e199baf76bfb169c9dd7':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'bg_2:rawscript/caf872b1d83f01a9d98fb8ef8167764c395ebeb9c0c67d9f8f75365dfe908b25':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'bg_3:rawscript/e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'dataSource:rawscript/ac9979ec05819cf68ed046b2c8444c8094b31a69532b719ca6b911e6d92f763e':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'enterDatasetNameResultMessage:rawscript/8e953eb74403c32e19ea085c922c8d5e9b78bdbbbb7d8712d910d85b2c33f003':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'formStepper:rawscript/a78a04440266c029d6878d2bb99d963d656c3ba08556a546df4a64789a69fd7a':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'submitDatasetName:rawscript/57668f9f668d96131044c91870599b3444782b9e51baa0298236b5d38845a44d':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs:
        db: '$res:u/rudo/ingenuous_postgresql'
    'uploadFile:rawscript/f8f678e9ac102fe7ac91e8042f4ef1523533fc663358a5c28b14c240466a66e0':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'uploadFileResultMessage:rawscript/4367aba1a642f5c124e0b646b8e5526222d71319f015fb44b4d5924597ab6b8e':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
